// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/music": {
            "get": {
                "description": "Получение списка песен с возможностью фильтрации, пагинации и сортировки",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Songs"
                ],
                "summary": "Get songs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Фильтр по идентификатору",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Nirvana",
                        "description": "Фильтр по группе",
                        "name": "group",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lithium",
                        "description": "Фильтр по названию песни",
                        "name": "song",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "example": 0,
                        "description": "Номер отступа для пагинации",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "example": 10,
                        "description": "Максимальное количество записей",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список песен",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Song"
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибка запроса",
                        "schema": {
                            "$ref": "#/definitions/appErr.Error"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/appErr.Error"
                        }
                    }
                }
            },
            "post": {
                "description": "Добавление новой песни",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Songs"
                ],
                "summary": "Add a song",
                "parameters": [
                    {
                        "description": "Данные новой песни",
                        "name": "song",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Song"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Song added with id: {id}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Ошибка запроса",
                        "schema": {
                            "$ref": "#/definitions/appErr.Error"
                        }
                    },
                    "422": {
                        "description": "Невалидные данные",
                        "schema": {
                            "$ref": "#/definitions/appErr.Error"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/appErr.Error"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаление песни по идентификатору",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Songs"
                ],
                "summary": "Delete a song",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Идентификатор песни",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Song deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Ошибка запроса",
                        "schema": {
                            "$ref": "#/definitions/appErr.Error"
                        }
                    },
                    "404": {
                        "description": "Песня не найдена",
                        "schema": {
                            "$ref": "#/definitions/appErr.Error"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/appErr.Error"
                        }
                    }
                }
            },
            "patch": {
                "description": "Изменение данных песни. Песня определяется по переданному в структуре id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Songs"
                ],
                "summary": "Change a song",
                "parameters": [
                    {
                        "description": "Данные для изменения песни",
                        "name": "song",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SongDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Song changed with id: {id}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Ошибка запроса",
                        "schema": {
                            "$ref": "#/definitions/appErr.Error"
                        }
                    },
                    "404": {
                        "description": "Песня не найдена",
                        "schema": {
                            "$ref": "#/definitions/appErr.Error"
                        }
                    },
                    "422": {
                        "description": "Невалидные данные",
                        "schema": {
                            "$ref": "#/definitions/appErr.Error"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/appErr.Error"
                        }
                    }
                }
            }
        },
        "/music/{id}/verse": {
            "get": {
                "description": "Получение куплетов песни по идентификатору",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Verses"
                ],
                "summary": "Get song verses",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Идентификатор песни",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Отступ для пагинации",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Максимальное количество записей",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список куплетов",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибка запроса",
                        "schema": {
                            "$ref": "#/definitions/appErr.Error"
                        }
                    },
                    "404": {
                        "description": "Песня не найдена",
                        "schema": {
                            "$ref": "#/definitions/appErr.Error"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/appErr.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "appErr.Error": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "models.Song": {
            "type": "object",
            "properties": {
                "details": {
                    "$ref": "#/definitions/models.SongDetails"
                },
                "group": {
                    "type": "string",
                    "example": "Nirvana"
                },
                "song": {
                    "type": "string",
                    "example": "Lithium"
                }
            }
        },
        "models.SongDTO": {
            "type": "object",
            "properties": {
                "details": {
                    "$ref": "#/definitions/models.SongDetails"
                },
                "group": {
                    "type": "string",
                    "example": "Nirvana"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "song": {
                    "type": "string",
                    "example": "Lithium"
                }
            }
        },
        "models.SongDetails": {
            "type": "object",
            "properties": {
                "link": {
                    "type": "string",
                    "example": "https://www.youtube.com/watch?v=Xsp3_a-PMTw"
                },
                "releaseDate": {
                    "type": "string",
                    "example": "13.07.1993"
                },
                "text": {
                    "type": "string",
                    "example": "I am so happy\ncause today..."
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Swagger Example API",
	Description:      "This is a sample server celler server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
